{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\temil\\\\OneDrive\\\\Desktop\\\\HumanCentricAttackPath\\\\human-centric-attack-path\\\\Frontend\\\\frontend\\\\src\\\\AttackPathGraph.jsx\";\nimport React from \"react\";\nimport ReactFlow, { Background, Controls, MarkerType } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\n// Helper to assign node type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNodeType = label => {\n  if (label === \"Attacker\") return \"attacker\";\n  if (label.includes(\"Office\") || label.includes(\"Room\") || label.includes(\"Lobby\") || label.includes(\"Area\") || label.includes(\"Department\") || label.includes(\"Suite\") || label.includes(\"Lab\")) return \"location\";\n  if (label.includes(\"Database\") || label.includes(\"Directory\") || label.includes(\"System\") || label.includes(\"Repository\") || label.includes(\"Infrastructure\") || label.includes(\"Communications\") || label.includes(\"Server\") || label.includes(\"Application\")) return \"asset\";\n  return \"user\";\n};\nconst nodeStyles = {\n  attacker: {\n    background: \"#fff\",\n    color: \"#222\",\n    borderRadius: 6,\n    border: \"1px solid #aaa\",\n    fontFamily: 'Segoe UI, Arial, sans-serif',\n    fontWeight: 600\n  },\n  user: {\n    background: \"#fff\",\n    color: \"#222\",\n    borderRadius: 6,\n    border: \"1px solid #aaa\",\n    fontFamily: 'Segoe UI, Arial, sans-serif',\n    fontWeight: 600\n  },\n  location: {\n    background: \"#fff\",\n    color: \"#222\",\n    borderRadius: 6,\n    border: \"1px solid #aaa\",\n    fontFamily: 'Segoe UI, Arial, sans-serif',\n    fontWeight: 600\n  },\n  asset: {\n    background: \"#fff\",\n    color: \"#222\",\n    borderRadius: 6,\n    border: \"1px solid #aaa\",\n    fontFamily: 'Segoe UI, Arial, sans-serif',\n    fontWeight: 600\n  }\n};\nconst UserNode = ({\n  label,\n  vuln\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  title: typeof vuln === 'number' && !isNaN(vuln) ? `Vulnerability: ${vuln.toFixed(2)}` : undefined,\n  children: [label, \" \", typeof vuln === 'number' && !isNaN(vuln) ? /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      fontSize: 12,\n      color: '#b71c1c'\n    },\n    children: [\"(Vuln: \", vuln.toFixed(2), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 57\n  }, this) : null]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this);\n_c = UserNode;\nfunction parsePathString(pathString) {\n  return pathString.replace(/\\u003E/g, \">\").split(\"->\").map(s => s.trim());\n}\nexport default function AttackPathGraph({\n  paths,\n  allUsers\n}) {\n  if (!paths || paths.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No paths to display.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 44\n  }, this);\n\n  // Build unique nodes and edges for the attack graph (from all paths)\n  const nodeMap = new Map();\n  const edgeSet = new Set();\n  let nodes = [];\n  let edges = [];\n  let rowMap = {};\n  let yStep = 120;\n  let xStep = 220;\n\n  // 1. Build nodes and edges from all paths\n  paths.forEach(p => {\n    const steps = parsePathString(p.path || p.Path);\n    steps.forEach((label, idx) => {\n      if (!nodeMap.has(label)) {\n        const type = getNodeType(label);\n        let vuln = undefined;\n        const vulnMatch = label.match(/Vuln: ([0-9.]+)/);\n        if (vulnMatch) vuln = Number(vulnMatch[1]);\n        if (!rowMap[idx]) rowMap[idx] = 0;\n        nodeMap.set(label, true);\n        nodes.push({\n          id: label,\n          data: {\n            label: type === \"user\" ? /*#__PURE__*/_jsxDEV(UserNode, {\n              label: label,\n              vuln: vuln\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 38\n            }, this) : label\n          },\n          position: {\n            x: idx * xStep,\n            y: rowMap[idx] * yStep\n          },\n          style: nodeStyles[type],\n          type\n        });\n        rowMap[idx]++;\n      }\n      if (idx > 0) {\n        const prev = steps[idx - 1];\n        const edgeId = `${prev}->${label}`;\n        if (!edgeSet.has(edgeId)) {\n          edgeSet.add(edgeId);\n          edges.push({\n            id: edgeId,\n            source: prev,\n            target: label,\n            markerEnd: {\n              type: MarkerType.ArrowClosed\n            },\n            animated: false\n          });\n        }\n      }\n    });\n  });\n\n  // (Removed: Add isolated user nodes)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"90vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontFamily: 'Segoe UI, Arial, sans-serif',\n        fontWeight: 600\n      },\n      children: \"Attack Path Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      fitView: true,\n      style: {\n        background: \"#fff\"\n      },\n      nodesDraggable: false,\n      nodesConnectable: false,\n      elementsSelectable: false,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AttackPathGraph;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserNode\");\n$RefreshReg$(_c2, \"AttackPathGraph\");","map":{"version":3,"names":["React","ReactFlow","Background","Controls","MarkerType","jsxDEV","_jsxDEV","getNodeType","label","includes","nodeStyles","attacker","background","color","borderRadius","border","fontFamily","fontWeight","user","location","asset","UserNode","vuln","title","isNaN","toFixed","undefined","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","parsePathString","pathString","replace","split","map","s","trim","AttackPathGraph","paths","allUsers","length","nodeMap","Map","edgeSet","Set","nodes","edges","rowMap","yStep","xStep","forEach","p","steps","path","Path","idx","has","type","vulnMatch","match","Number","set","push","id","data","position","x","y","prev","edgeId","add","source","target","markerEnd","ArrowClosed","animated","width","height","fitView","nodesDraggable","nodesConnectable","elementsSelectable","_c2","$RefreshReg$"],"sources":["C:/Users/temil/OneDrive/Desktop/HumanCentricAttackPath/human-centric-attack-path/Frontend/frontend/src/AttackPathGraph.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactFlow, { Background, Controls, MarkerType } from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\n// Helper to assign node type\r\nconst getNodeType = (label) => {\r\n  if (label === \"Attacker\") return \"attacker\";\r\n  if (\r\n    label.includes(\"Office\") ||\r\n    label.includes(\"Room\") ||\r\n    label.includes(\"Lobby\") ||\r\n    label.includes(\"Area\") ||\r\n    label.includes(\"Department\") ||\r\n    label.includes(\"Suite\") ||\r\n    label.includes(\"Lab\")\r\n  )\r\n    return \"location\";\r\n  if (\r\n    label.includes(\"Database\") ||\r\n    label.includes(\"Directory\") ||\r\n    label.includes(\"System\") ||\r\n    label.includes(\"Repository\") ||\r\n    label.includes(\"Infrastructure\") ||\r\n    label.includes(\"Communications\") ||\r\n    label.includes(\"Server\") ||\r\n    label.includes(\"Application\")\r\n  )\r\n    return \"asset\";\r\n  return \"user\";\r\n};\r\n\r\nconst nodeStyles = {\r\n  attacker: {\r\n    background: \"#fff\",\r\n    color: \"#222\",\r\n    borderRadius: 6,\r\n    border: \"1px solid #aaa\",\r\n    fontFamily: 'Segoe UI, Arial, sans-serif',\r\n    fontWeight: 600\r\n  },\r\n  user: {\r\n    background: \"#fff\",\r\n    color: \"#222\",\r\n    borderRadius: 6,\r\n    border: \"1px solid #aaa\",\r\n    fontFamily: 'Segoe UI, Arial, sans-serif',\r\n    fontWeight: 600\r\n  },\r\n  location: {\r\n    background: \"#fff\",\r\n    color: \"#222\",\r\n    borderRadius: 6,\r\n    border: \"1px solid #aaa\",\r\n    fontFamily: 'Segoe UI, Arial, sans-serif',\r\n    fontWeight: 600\r\n  },\r\n  asset: {\r\n    background: \"#fff\",\r\n    color: \"#222\",\r\n    borderRadius: 6,\r\n    border: \"1px solid #aaa\",\r\n    fontFamily: 'Segoe UI, Arial, sans-serif',\r\n    fontWeight: 600\r\n  }\r\n};\r\n\r\nconst UserNode = ({ label, vuln }) => (\r\n  <div title={typeof vuln === 'number' && !isNaN(vuln) ? `Vulnerability: ${vuln.toFixed(2)}` : undefined}>\r\n    {label} {typeof vuln === 'number' && !isNaN(vuln) ? <span style={{ fontSize: 12, color: '#b71c1c' }}>(Vuln: {vuln.toFixed(2)})</span> : null}\r\n  </div>\r\n);\r\n\r\nfunction parsePathString(pathString) {\r\n  return pathString.replace(/\\u003E/g, \">\")\r\n    .split(\"->\")\r\n    .map(s => s.trim());\r\n}\r\n\r\nexport default function AttackPathGraph({ paths, allUsers }) {\r\n  if (!paths || paths.length === 0) return <div>No paths to display.</div>;\r\n\r\n  // Build unique nodes and edges for the attack graph (from all paths)\r\n  const nodeMap = new Map();\r\n  const edgeSet = new Set();\r\n  let nodes = [];\r\n  let edges = [];\r\n  let rowMap = {};\r\n  let yStep = 120;\r\n  let xStep = 220;\r\n\r\n  // 1. Build nodes and edges from all paths\r\n  paths.forEach((p) => {\r\n    const steps = parsePathString(p.path || p.Path);\r\n    steps.forEach((label, idx) => {\r\n      if (!nodeMap.has(label)) {\r\n        const type = getNodeType(label);\r\n        let vuln = undefined;\r\n        const vulnMatch = label.match(/Vuln: ([0-9.]+)/);\r\n        if (vulnMatch) vuln = Number(vulnMatch[1]);\r\n        if (!rowMap[idx]) rowMap[idx] = 0;\r\n        nodeMap.set(label, true);\r\n        nodes.push({\r\n          id: label,\r\n          data: {\r\n            label: type === \"user\" ? <UserNode label={label} vuln={vuln} /> : label\r\n          },\r\n          position: { x: idx * xStep, y: rowMap[idx] * yStep },\r\n          style: nodeStyles[type],\r\n          type\r\n        });\r\n        rowMap[idx]++;\r\n      }\r\n      if (idx > 0) {\r\n        const prev = steps[idx - 1];\r\n        const edgeId = `${prev}->${label}`;\r\n        if (!edgeSet.has(edgeId)) {\r\n          edgeSet.add(edgeId);\r\n          edges.push({\r\n            id: edgeId,\r\n            source: prev,\r\n            target: label,\r\n            markerEnd: { type: MarkerType.ArrowClosed },\r\n            animated: false\r\n          });\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  // (Removed: Add isolated user nodes)\r\n\r\n  return (\r\n    <div style={{ width: \"100vw\", height: \"90vh\" }}>\r\n      <h2 style={{ fontFamily: 'Segoe UI, Arial, sans-serif', fontWeight: 600 }}>Attack Path Graph</h2>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        fitView\r\n        style={{ background: \"#fff\" }}\r\n        nodesDraggable={false}\r\n        nodesConnectable={false}\r\n        elementsSelectable={false}\r\n      >\r\n        <Background />\r\n        <Controls />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}